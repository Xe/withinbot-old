/* automatically generated by rust-bindgen */

pub type __int32_t = ::std::os::raw::c_int;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct prices {
    pub base: i32,
    pub prices: [i32; 14usize],
}
#[test]
fn bindgen_test_layout_prices() {
    assert_eq!(
        ::std::mem::size_of::<prices>(),
        60usize,
        concat!("Size of: ", stringify!(prices))
    );
    assert_eq!(
        ::std::mem::align_of::<prices>(),
        4usize,
        concat!("Alignment of ", stringify!(prices))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<prices>())).base as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(prices),
            "::",
            stringify!(base)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<prices>())).prices as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(prices),
            "::",
            stringify!(prices)
        )
    );
}
#[link(name = "stonks")]
extern "C" {
    pub fn stonks(pattern: i32, seed: i32) -> prices;
}
